library("quadprog")
# Load the working environment
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/compfin/lab9.RData"))
# Explore the data set
head(returns_df)
tail(returns_df)
# Timeplots of stocks on seperate graphs
my.panel <- function(...) {
lines(...)
abline(h=0)
}
plot(returns_df, lwd=2, panel=my.panel, col="blue")
# Timeplots of stocks on same graph
plot(returns_df, plot.type = "single", main="Returns", col=1:4, lwd=2)
abline(h=0)
legend(x="bottomleft", legend=colnames(returns_df), col=1:4, lwd=2)
# Parameters CER model
mu_hat_month <- apply(returns_df, 2, mean)
mu_hat_month
sigma2_month <- apply(returns_df, 2, var)
sigma2_month
sigma_month <- apply(returns_df, 2, sd)
sigma_month
cov_mat_month <- var(returns_df)
cov_mat_month
cor_mat_month <- cor(returns_df)
cor_mat_month
# Pairwise scatterplots
pairs(coredata(returns_df), col = "blue", pch = 16)
# Calculate the global minimum variance portfolio
global_min_var_portfolio = globalMin.portfolio(mu_hat_month, cov_mat_month,
shorts=TRUE)
global_min_var_portfolio
# Plot the portfolio weights of our four stocks
plot(global_min_var_portfolio)
# set restriction matrices
D_matrix <- 2* cov_mat_month
D_matrix
d_vector <- rep(0,4)
d_vector
A_matrix <- cbind(rep(1,4),diag(4))
A_matrix
b_vector <- c(1,rep(0,4))
b_vector
# use solve.QP to minimize portfolio variance
quad_prog <- solve.QP(D_matrix, d_vector, A_matrix, b_vector)
quad_prog
# The global minimum variance portfolio no shorts allowed
global_min_var_portfolio <- globalMin.portfolio(mu_hat_month, cov_mat_month,
short = FALSE)
global_min_var_portfolio
# highest average return
mu_target <- max(mu_hat_month)
# short sales allowed
efficient_porfolio_short <- efficient.portfolio(mu_hat_month, cov_mat_month, mu_target,shorts=TRUE)
efficient_porfolio_short
plot(efficient_porfolio_short)
# no short sales allowed
efficient_porfolio_no_short <- efficient.portfolio(mu_hat_month, cov_mat_month, mu_target,shorts=FALSE)
efficient_porfolio_no_short
plot(efficient_porfolio_no_short)
# The efficient frontier of risky assets
efficient_frontier <- efficient.frontier(mu_hat_month, cov_mat_month, alpha.min=-1, alpha.max=1)
summary(efficient_frontier)
# The plot
plot(efficient_frontier, plot.assets=TRUE, col="blue", lwd=2)
# risk free rate
t_bill_rate <- 0.005
# Tangency portfolio short sales allowed
tangency_portfolio_short <- tangency.portfolio(mu_hat_month, cov_mat_month, risk.free=t_bill_rate,shorts=TRUE)
summary(tangency_portfolio_short)
#plot
plot(tangency_portfolio_short)
# Tangency portfolio short sales not allowed
tangency_portfolio_no_short <- tangency.portfolio(mu_hat_month, cov_mat_month, risk.free=t_bill_rate,shorts=FALSE)
summary(tangency_portfolio_no_short)
#plot
plot(tangency_portfolio_no_short)
# The plot
plot(efficient_frontier, plot.assets=TRUE, col="blue", lwd=2)
plot(returns_df, lwd=2, panel=my.panel, col="blue")
plot(returns_df, plot.type = "single", main="Returns", col=1:4, lwd=2)
abline(h=0)
legend(x="bottomleft", legend=colnames(returns_df), col=1:4, lwd=2)
plot(efficient_porfolio_short)
plot(efficient_porfolio_no_short)
plot(efficient_frontier, plot.assets=TRUE, col="blue", lwd=2)
plot(tangency_portfolio_short)
plot(tangency_portfolio_no_short)
# Introduction to Portfolio Theory
# Michael Beven
# 20150922
# Data: amazonaws
# Load relevant packages
library("PerformanceAnalytics")
library("zoo")
library("PortfolioAnalytics")
require("PortfolioAnalytics")
# Load the data
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/compfin/lab8.RData"))
# Explore the data set
head(returns_df)
tail(returns_df)
# Estimate the parameters: multivariate
mu_hat_annual = apply(returns_df,2,mean)*12
sigma2_annual = apply(returns_df, 2, var)*12
sigma_annual = apply(returns_df, 2, sd)*sqrt(12)
cov_mat_annual = cov(returns_df)*12
cov_hat_annual = cov(returns_df)[1,2]*12
rho_hat_annual = cor(returns_df)[1,2]
# The annual estimates of the CER model parameters for Boeing and Microsoft
mu_boeing = mu_hat_annual["rboeing"]
mu_msft = mu_hat_annual["rmsft"]
sigma2_boeing = sigma2_annual["rboeing"]
sigma2_msft = sigma2_annual["rmsft"]
sigma_boeing = sigma_annual["rboeing"]
sigma_msft = sigma_annual["rmsft"]
sigma_boeing_msft = cov_hat_annual
rho_boeing_msft = rho_hat_annual
# The ratio Boeing stock vs Microsoft stock (adds up to 1)
boeing_weights = seq(from=-1, to=2, by=0.1)
msft_weights = 1 - boeing_weights
# Portfolio parameters
mu_portfolio = boeing_weights * mu_boeing + msft_weights * mu_msft
sigma2_portfolio = boeing_weights^2 * sigma2_boeing + msft_weights^2 * sigma2_msft +
2 * boeing_weights * msft_weights * sigma_boeing_msft
sigma_portfolio = sqrt(sigma2_portfolio)
# Plotting the different portfolios
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)),
xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),
col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="Microsoft", pos=4)
# Annual risk-free rate of 3% per year for the T-bill
t_bill_rate = 0.03
# Ratio Boeing stocks
boeing_weights = seq(from=-1, to=2, by=0.1)
t_bill_weights = 1 - boeing_weights
# Portfolio parameters
mu_portfolio_boeing_bill = t_bill_weights * t_bill_rate + boeing_weights * mu_boeing
sigma_portfolio_boeing_bill = abs(boeing_weights * sigma_boeing)
# Plot previous exercise
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)),
xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),
col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
# Portfolio Combination Boeing and T-bills
points(sigma_portfolio_boeing_bill, mu_portfolio_boeing_bill, col = "blue", type = "b")
# Sharp ratio Boeing
sharp_ratio_boeing = (mu_boeing - t_bill_rate) / sigma_boeing
# The global minimum variance portfolio
global_min_var_portfolio = globalMin.portfolio(er=mu_hat_annual, cov.mat = cov_mat_annual)
global_min_var_portfolio
# Summary of global_min_var_portfolio that takes into account the annual risk-free rate of 3% per year
summary(global_min_var_portfolio, risk.free = 0.03)
# Portfolio weights Boeing and Microsoft
plot(global_min_var_portfolio)
# Plot previous exercises
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)), xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
# Plot the position of the global minimum variance portfolio
text(x=global_min_var_portfolio$sd, y=global_min_var_portfolio$er, labels="Global min", pos=2)
# The tangency portfolio
tangency_portfolio = tangency.portfolio(er = mu_hat_annual, cov.mat = cov_mat_annual,
risk.free = 0.03)
tangency_portfolio
# Summary of tangency_portfolio with annual risk free rate of 3%
summary(tangency_portfolio, risk.free = 0.03)
# Portfolio weights Boeing and Microsoft
plot(tangency_portfolio)
# Set of tangency portfolio weights
tangency_weights <- seq(from=0, to=2, by=0.1)
# Portfolio parameters
mu_portfolio_tangency_bill = t_bill_rate + tangency_weights*(tangency_portfolio$er-t_bill_rate)
sigma_portfolio_tangency_bill = tangency_weights*tangency_portfolio$sd
# Plot previous exercises
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)), xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
# Plot portfolio combinations of tangency portfolio and T-bills
text(x=tangency_portfolio$sd, y=tangency_portfolio$er, labels="Tangency", pos=2)
points(sigma_portfolio_tangency_bill, mu_portfolio_tangency_bill, type="b", col="blue", pch=16)
# Define the portfolio ratio's
tangency_weight = 0.3
t_bill_weight = 1 - tangency_weight
# Define the portfolio parameters
mu_portfolio_efficient <- t_bill_rate + tangency_weight*(tangency_portfolio$er - t_bill_rate)
sd_portfolio_efficient <- tangency_weight*tangency_portfolio$sd
# Plot previous exercises
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)), xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
text(x=tangency_portfolio$sd, y=tangency_portfolio$er, labels="Tangency", pos=2)
points(sigma_portfolio_tangency_bill, mu_portfolio_tangency_bill, type="b", col="blue", pch=16)
# Plot Efficient Portfolio with 30% Tangency
points(sd_portfolio_efficient, mu_portfolio_efficient, type="b", col="orange", pch=16, cex=2)
text(x=sd_portfolio_efficient, y=mu_portfolio_efficient, labels="Efficient Portfolio with 30% Tangency", pos=4, cex=0.75)
# Define the tangency portfolio ratio
tangency_weight  = sigma_boeing/tangency_portfolio$sd
# Calculate the weight of the tangency portfolio in the portfolio
mu_portfolio_efficient = t_bill_rate + tangency_weight*(tangency_portfolio$er - t_bill_rate)
sd_portfolio_efficient = tangency_weight*tangency_portfolio$sd
# Plot previous exercises
plot(sigma_portfolio, mu_portfolio,bg="NA", type="b", pch=16, ylim=c(0, max(mu_portfolio)), xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
text(x=tangency_portfolio$sd, y=tangency_portfolio$er, labels="Tangency", pos=2)
points(sigma_portfolio_tangency_bill, mu_portfolio_tangency_bill, type="b", col="blue", pch=16)
# Plot Efficient Portfolio with the same risk as Boeing
points(sd_portfolio_efficient, mu_portfolio_efficient, type="p", col="orange", pch=16, cex=2)
text(x=sd_portfolio_efficient, y=mu_portfolio_efficient, labels="Efficient Portfolio with same risk as Boeing", pos=2, cex=0.75)
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)),
xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),
col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="Microsoft", pos=4)
# Plot previous exercise
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)),
xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),
col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
# Portfolio Combination Boeing and T-bills
points(sigma_portfolio_boeing_bill, mu_portfolio_boeing_bill, col = "blue", type = "b")
#
plot(global_min_var_portfolio)
# Plot previous exercises
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)), xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
# Portfolio weights Boeing and Microsoft
plot(tangency_portfolio)
# Plot previous exercises
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)), xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
# Plot previous exercises
plot(sigma_portfolio, mu_portfolio, type="b", pch=16, ylim=c(0, max(mu_portfolio)), xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
text(x=tangency_portfolio$sd, y=tangency_portfolio$er, labels="Tangency", pos=2)
points(sigma_portfolio_tangency_bill, mu_portfolio_tangency_bill, type="b", col="blue", pch=16)
# Plot previous exercises
plot(sigma_portfolio, mu_portfolio,bg="NA", type="b", pch=16, ylim=c(0, max(mu_portfolio)), xlim=c(0, max(sigma_portfolio)), xlab=expression(sigma[p]), ylab=expression(mu[p]),col=c(rep("green", 18), rep("red", 13)))
text(x=sigma_boeing, y=mu_boeing, labels="Boeing", pos=4)
text(x=sigma_msft, y=mu_msft, labels="MSFT", pos=4)
text(x=tangency_portfolio$sd, y=tangency_portfolio$er, labels="Tangency", pos=2)
points(sigma_portfolio_tangency_bill, mu_portfolio_tangency_bill, type="b", col="blue", pch=16)
# The plot
plot(efficient_frontier, plot.assets=TRUE, col="blue", lwd=2)
# Pairwise scatterplots
pairs(coredata(returns_df), col = "blue", pch = 16)
mu_hat_annual
# Estimate the parameters: multivariate
mu_hat_annual = apply(returns_df,2,mean)*12
sigma2_annual = apply(returns_df, 2, var)*12
sigma_annual = apply(returns_df, 2, sd)*sqrt(12)
cov_mat_annual = cov(returns_df)*12
cov_hat_annual = cov(returns_df)[1,2]*12
rho_hat_annual = cor(returns_df)[1,2]
mu_hat_annual
mu_hat_month
sigma2_month
cov_mat_month
cor_mat
mu_hat_month
mu
mu_old = c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1)
mu_old
mu.old = data.frame(c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1))
mu.old
mu.old = c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1)
mu.old
dataframe(mu.old)
data.frame(mu.old)
mu.old = data.frame(c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1))
mu.old
mu.old = as.data.frame(c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1))
mu.old
mu.old = c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1)
mu.old = data.frame(mu.old)
mu.old
mu.old = c(13.2;10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1)
mu.old = r(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1)
mu.old = c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1)
mu_hat_annual
mu.old = t(c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1))
mu.old = data.frame(mu.old)
mu.old
colnames(mu.old) = c('a','b','c','d','e','f','g','h','i','j','k')
mu.old
colnames(mu.old) = c('Domestic.Equity','b','c','d','e','f','g','h','i','j','k')
mu.old
colnames(mu.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
mu.old
cor_mat_month
# correlations
n = c(2, 3, 5)
s = c("aa", "bb", "cc")
b = c(TRUE, FALSE, TRUE)
data.frame(n, s, b)
t(data.frame(n, s, b))
# correlations
DE = c(1.00,0.51,0.37,0.26,0.86,0.56,0.00,0.06,0.32,0.10,0.14)
FE = c(0.51,1.00,0.37,0.12,0.89,0.35,0.02,0.13,0.22,0.40,0.16)
EM = c(0.37,0.37,1.00,0.16,0.56,0.39,-0.05,-0.08,-0.09,-0.07,-0.06)
PE = c(0.26,0.12,0.16,1.00,0.27,0.06,0.05,0.12,-0.12,-0.30,0.03)
AR = c(0.86,0.89,0.56,0.27,1.00,0.50,0.04,0.07,0.37,0.40,0.29)
HY = c(0.56,0.35,0.39,0.06,0.50,1.00,-0.32,-0.11,0.31,-0.01,0.32)
C = c(0.00,0.02,-0.05,0.05,0.04,-0.32,1.00,-0.04,-0.09,0.19,-0.20)
RE = c(0.06,0.13,-0.08,0.12,0.07,-0.11,-0.04,1.00,-0.06,-0.15,0,39)
DB = c(0.32,0.22,-0.09,-0.12,0.37,0.31,-0.09,-0.06,1.00,0.42,0.28)
FB = c(0.10,0.40,-0.07,-0.30,0.40,-0.01,0.19,-0.15,0.42,1.00,0.01)
Cash = c(0.14,0.16,-0.06,0.03,0.29,0.32,-0.20,0.39,0.28,0.01,1.00)
data.frame(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash)
DE = c(1.00,0.51,0.37,0.26,0.86,0.56,0.00,0.06,0.32,0.10,0.14)
FE = c(0.51,1.00,0.37,0.12,0.89,0.35,0.02,0.13,0.22,0.40,0.16)
EM = c(0.37,0.37,1.00,0.16,0.56,0.39,-0.05,-0.08,-0.09,-0.07,-0.06)
PE = c(0.26,0.12,0.16,1.00,0.27,0.06,0.05,0.12,-0.12,-0.30,0.03)
AR = c(0.86,0.89,0.56,0.27,1.00,0.50,0.04,0.07,0.37,0.40,0.29)
HY = c(0.56,0.35,0.39,0.06,0.50,1.00,-0.32,-0.11,0.31,-0.01,0.32)
C = c(0.00,0.02,-0.05,0.05,0.04,-0.32,1.00,-0.04,-0.09,0.19,-0.20)
RE = c(0.06,0.13,-0.08,0.12,0.07,-0.11,-0.04,1.00,-0.06,-0.15,0,39)
DB = c(0.32,0.22,-0.09,-0.12,0.37,0.31,-0.09,-0.06,1.00,0.42,0.28)
FB = c(0.10,0.40,-0.07,-0.30,0.40,-0.01,0.19,-0.15,0.42,1.00,0.01)
Cash = c(0.14,0.16,-0.06,0.03,0.29,0.32,-0.20,0.39,0.28,0.01,1.00)
length(DE)
length(FE)
length(EM)
length(PE)
length(AR)
length(HY)
length(C)
length(RE)
RE = c(0.06,0.13,-0.08,0.12,0.07,-0.11,-0.04,1.00,-0.06,-0.15,0.39)
data.frame(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash)
cor.old = data.frame(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash)
rownames(cor.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
cor.old
mu_hat_month
sigma_month
cov_mat_month
cor_mat_month
sigma.old = t(c(0.152,0.174,0.212,0.152,0.086,0.073,0.107,0.064,0.078,0.087,0.009))
sigma.old = data.frame(sigma.old)
sigma.old = t(c(0.152,0.174,0.212,0.152,0.086,0.073,0.107,0.064,0.078,0.087,0.009))
sigma.old = data.frame(sigma.old)
colnames(sigma.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
sigma.old
sigma_month
cor_mat_month
sigma_month*cor_math_month
sigma_month*cor_mat_month
diag(sigma_month)
diag(sigma_month)*cor_mat_month*diag(sigma_month)
cor_mat_month
cov_mat_month
diag(sigma_month)*cor_mat_month*t(diag(sigma_month))
diag(sigma_month)
cor_mat_month
diag(sigma_month)*cor_mat_month
b = sigma.old %*% t(sigma.old)
b = sigma.old %*% t(sigma.old)
sigma.old
t(sigma.old)
sigma.old %*% t(sigma.old)
sigma.old * t(sigma.old)
sigma.old * t(sigma.old) * cor.old
t(sigma.old) * sigma.old * cor.old
t(sigma.old) %*% sigma.old
as.vector(sigma.old) %*% as.vector(t(sigma.old)) * as.matrix(cor.old)
as.vector(sigma.old) %*% as.vector(t(sigma.old))
outer(diag(sigma_month),diag(sigma_month),cor_mat_month)
outer(diag(sigma_month),diag(sigma_month))*cor_mat_month
diag(sigma_month)
sigma_month %*% cor_mat_month
diag(sigma_month) %*% cor_mat_month
diag(sigma_month) %*% cor_mat_month %*% diag(sigma_month)
cov_mat_month
cov.old = diag(sigma.old) %*% cor.old %*% diag(sigma.old)
View(cov_mat_annual)
View(cor.old)
cov.old = diag(as.matrix(sigma.old)) %*% as.matrix(cor.old) %*% diag(as.matrix(sigma.old))
diag(as.matrix(sigma.old))
as.matrix(sigma.old)
tmp = as.matrix(sigma.old)
diag(tmp)
mu.old = t(c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1))
colnames(mu.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
mu.old
mu.old = t(c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1))
#mu.old = data.frame(mu.old)
colnames(mu.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
mu.old
# volatility
sigma.old = t(c(0.152,0.174,0.212,0.152,0.086,0.073,0.107,0.064,0.078,0.087,0.009))
#sigma.old = data.frame(sigma.old)
colnames(sigma.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
sigma.old
# correlations
DE = c(1.00,0.51,0.37,0.26,0.86,0.56,0.00,0.06,0.32,0.10,0.14)
FE = c(0.51,1.00,0.37,0.12,0.89,0.35,0.02,0.13,0.22,0.40,0.16)
EM = c(0.37,0.37,1.00,0.16,0.56,0.39,-0.05,-0.08,-0.09,-0.07,-0.06)
PE = c(0.26,0.12,0.16,1.00,0.27,0.06,0.05,0.12,-0.12,-0.30,0.03)
AR = c(0.86,0.89,0.56,0.27,1.00,0.50,0.04,0.07,0.37,0.40,0.29)
HY = c(0.56,0.35,0.39,0.06,0.50,1.00,-0.32,-0.11,0.31,-0.01,0.32)
C = c(0.00,0.02,-0.05,0.05,0.04,-0.32,1.00,-0.04,-0.09,0.19,-0.20)
RE = c(0.06,0.13,-0.08,0.12,0.07,-0.11,-0.04,1.00,-0.06,-0.15,0.39)
DB = c(0.32,0.22,-0.09,-0.12,0.37,0.31,-0.09,-0.06,1.00,0.42,0.28)
FB = c(0.10,0.40,-0.07,-0.30,0.40,-0.01,0.19,-0.15,0.42,1.00,0.01)
Cash = c(0.14,0.16,-0.06,0.03,0.29,0.32,-0.20,0.39,0.28,0.01,1.00)
cor.old = c(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash)
cor.old
cor.old = data.frame(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash)
cor.old
rownames(cor.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
# covariance
cov.old = diag(as.matrix(sigma.old)) %*% as.matrix(cor.old) %*% diag(as.matrix(sigma.old))
diag(as.matrix(sigma.old))
sigma.old
sigma_month
diag(sigma_month)
diag(t(sigma.old))
sigma.old
diag(as.data.frame(sigma.old))
cor.old = as.data.frame(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash)
cor.old = as.data.frame(cor.old)
cor.old
rownames(cor.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
mu.old = t(c(13.2,10.2,4.9,17.9,8.6,7.1,1.1,1.4,6.0,5.1,3.1))
mu.old = as.data.frame(mu.old)
colnames(mu.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
mu.old
# volatility
sigma.old = t(c(0.152,0.174,0.212,0.152,0.086,0.073,0.107,0.064,0.078,0.087,0.009))
sigma.old = as.data.frame(sigma.old)
colnames(sigma.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
sigma.old
diag(sigma.old)
# correlations
DE = c(1.00,0.51,0.37,0.26,0.86,0.56,0.00,0.06,0.32,0.10,0.14)
FE = c(0.51,1.00,0.37,0.12,0.89,0.35,0.02,0.13,0.22,0.40,0.16)
EM = c(0.37,0.37,1.00,0.16,0.56,0.39,-0.05,-0.08,-0.09,-0.07,-0.06)
PE = c(0.26,0.12,0.16,1.00,0.27,0.06,0.05,0.12,-0.12,-0.30,0.03)
AR = c(0.86,0.89,0.56,0.27,1.00,0.50,0.04,0.07,0.37,0.40,0.29)
HY = c(0.56,0.35,0.39,0.06,0.50,1.00,-0.32,-0.11,0.31,-0.01,0.32)
C = c(0.00,0.02,-0.05,0.05,0.04,-0.32,1.00,-0.04,-0.09,0.19,-0.20)
RE = c(0.06,0.13,-0.08,0.12,0.07,-0.11,-0.04,1.00,-0.06,-0.15,0.39)
DB = c(0.32,0.22,-0.09,-0.12,0.37,0.31,-0.09,-0.06,1.00,0.42,0.28)
FB = c(0.10,0.40,-0.07,-0.30,0.40,-0.01,0.19,-0.15,0.42,1.00,0.01)
Cash = c(0.14,0.16,-0.06,0.03,0.29,0.32,-0.20,0.39,0.28,0.01,1.00)
cor.old = data.frame(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash)
cor.old = as.data.frame(cor.old)
rownames(cor.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
# covariance
cov.old = diag(as.matrix(sigma.old)) %*% as.matrix(cor.old) %*% diag(as.matrix(sigma.old))
diag(as.matrix(sigma.old))
diag(sigma.old)
cov.old = diag(sigma.old) %*% cor.old %*% diag(sigma.old)
diag(sigma.old)
cor.old
diag(sigma.old) %*% cor.old
o
cor.old = as.data.frame(cor.old)
diag(sigma.old) %*% cor.old
diag(sigma.old) %*% diag(sigma.old)
cor.old = as.data.frame(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash)
cor.old = as.data.frame(c(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash),nrow=11,ncol=11)
cor.old
cor.old = matrix(c(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash),nrow=11,ncol=11)
cor.old
cor.old = as.data.frame(cor.old)
cor.old
cov.old = diag(sigma.old) %*% cor.old %*% diag(sigma.old)
cor.old = matrix(c(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash),nrow=11,ncol=11)
cov.old = diag(sigma.old) %*% cor.old %*% diag(sigma.old)
cov.old
round(cov.old,5)
cov.old
cor.old = matrix(c(DE,FE,EM,PE,AR,HY,C,RE,DB,FB,Cash),nrow=11,ncol=11)
rownames(cor.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
cor.old
coldnames(cor.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
colnames(cor.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
cor.old
colnames(cov.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
rownames(cov.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
cov.old
cov.old = diag(sigma.old) %*% cor.old %*% diag(sigma.old)
cov.old = round(cov.old,5)
colnames(cov.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
rownames(cov.old) = c('DE','FE','EM','PE','AR','HY','C','RE','DB','FB','Cash')
cov.old
# load relevant packages
library("PerformanceAnalytics")
library("zoo")
library("quadprog")
library("PortfolioAnalytics")
require("PortfolioAnalytics")
global_min_var_portfolio = globalMin.portfolio(mu.old, cov.old,shorts=TRUE)
global_min_var_portfolio = globalMin.portfolio(mu.old, cov.old,shorts=TRUE)
global_min_var_portfolio = globalMin.portfolio(mu.old, cov.old)
# Calculate the global minimum variance portfolio
global_min_var_portfolio = globalMin.portfolio(mu_hat_month, cov_mat_month,
shorts=TRUE)
global_min_var_portfolio
plot(global_min_var_portfolio)
efficient_porfolio_short <- efficient.portfolio(mu.old, cov.old,shorts=TRUE)
efficient_porfolio_short
plot(efficient_porfolio_short)
